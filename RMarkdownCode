---
title: "Cyclistic:Bikeshare Analysis - Visual Insights"
output:
  word_document: default
  pdf_document: default
  html_document:
    df_print: paged
---
```{r, include=FALSE}
# Load required packages
install.packages("tidyverse")
#install.packages("kableExtra")
library(dplyr)
library(ggplot2)
#library(kableExtra)
```

*This Rmarkdown notebook presents a collection of visualizations illustrating key insights derived from the analysis of Cyclistic:Bikeshare company data during the Share Phase. Explore the dynamic visual representations to gain a deeper understanding of ride patterns, member behaviors, and other significant trends within the bikeshare system.*


1) The code chunk below reads the overall statistics dataset and rounds numerical values for better readability. Displays a summary table providing insights into key metrics of the dataset.

```{r}
# Read and preprocess the dataset
data <- read.csv("OveralStats.csv")
data$AverageDurationMin <- round(data$AverageDurationMin, 2)
data$AverageMemberDuration <- round(data$AverageMemberDuration, 2)
data$AverageCasualDuration <- round(data$AverageCasualDuration, 2)
# Summary table of the dataset
print(data)


```

2) The next code visualizes the distribution of rides based on rideable type and member type.

```{r}
# Bar chart showing the type of bikes
rides_data = read.csv("MemberType.csv")

gg <- ggplot(rides_data, aes(x = rideable_type, y = number_of_rides, fill = member_casual)) +
  geom_bar(stat = "identity", position = "dodge") +
  scale_fill_manual(values = c("member" = "#7eb0d5", "casual" = "#fd7f6f"))+
  labs(title = "Number of Rides by Rideable Type and Member Type", 
       x = "Rideable Type", 
       y = "Number of Rides") +
  theme_minimal()

ggsave("Number of Rides by Rideable Type and Member Type.png", plot = gg, device = "png")
```


3) Following code chunk explores the average ride duration based on rideable type and member type.

```{r}
# Another plot for average ride duration
gg <- ggplot(rides_data, aes(x = rideable_type, y = avg_ridetime_min, fill = member_casual)) +
  geom_bar(stat = "identity", position = "dodge") +
  scale_fill_manual(values = c("member" = "#7eb0d5", "casual" = "#fd7f6f"))+
  labs(title = "Average Ride Duration by Rideable Type and Member Type", 
       x = "Rideable Type", 
       y = "Average Ride Duration (min)") +
  theme_minimal()
ggsave("Average Ride Duration by Rideable Type and Member Type.png", plot = gg, device = "png")
```


4) The code below reads and displays the dataset containing information about the top 5 famous routes for membership holders.

```{r}
# Top 5 Famous Routes for Membership Holders
data1 <- read.csv("FamousRouteMember.csv")
print (data1)

```


5) Alternatively, the next code chunk reads and displays the dataset containing information about the top 5 famous starting and destination stations for casual riders.

```{r}
# Top 5 Famous Routes for Casual Riders
data1 <- read.csv("FamousRouteCasual.csv")
print (data1)
```


6) The next code reads the dataset for the number of rides per month and adjusts the order of months for better plotting.


```{r}
# Monthly Ride Analysis
data1 <- read.csv("MostPopularMonth.csv")
data1$Month <- factor(data1$Month, levels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"))

# Define the month names
month_names <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")

# Plot the number of rides by month for casual and member riders.
gg <- ggplot(data1, aes(x = Month, group = 1)) +
  geom_line(aes(y = CasualTotal), color = "#fd7f6f", linetype = "solid", linewidth = 1) +
  geom_line(aes(y = MemberTotal), color = "#7eb0d5", linetype = "solid", linewidth = 1) +
  geom_text(aes(x = "12", y = CasualTotal[7], label = "Casual Number"), vjust = 4, hjust = 3, color = "#fd7f6f") +
  geom_text(aes(x = "12", y = MemberTotal[7], label = "Member Number"), vjust = 2, hjust = 2.6, color = "#7eb0d5") +
  ggtitle("Number of Rides by Month") +
  xlab("Month") +
  ylab("Number of Rides") +
  theme(axis.text.y = element_text(size = 8),  # Set the size of the y-axis text
        axis.ticks.y = element_line(linewidth = 0.1)) +  # Set the size of the y-axis ticks
  scale_y_continuous(n.breaks=7) +
  scale_x_discrete(labels = month_names)
ggsave("Number of Rides by Month.png", plot = gg, device = "png")
```


7) The next code chunk visualizes the average ride duration changes over the months for both casual and member riders.

```{r}
# Average Duration by Month
gg <- ggplot(data1, aes(x = Month, group = 1)) +
  geom_line(aes(y = AverageCasualDuration), color = "#fd7f6f", linetype = "solid", linewidth = 1) +
  geom_line(aes(y = AverageMemberDuration), color = "#7eb0d5", linetype = "solid", linewidth = 1) +
  geom_text(aes(x = "12", y = AverageCasualDuration[7], label = "Casual Duration"), vjust = 0, hjust = 2.5, color = "#fd7f6f") +
  geom_text(aes(x = "12", y = AverageMemberDuration[7], label = "Member Duration"), vjust = 0, hjust = 2.35, color = "#7eb0d5") +
  ggtitle("Average Duration by Month") +
  xlab("Month") +
  ylab("Average Duration (min)") +
  theme(axis.text.y = element_text(size = 8),  # Set the size of the y-axis text
        axis.ticks.y = element_line(linewidth = 0.1)) +  # Set the size of the y-axis ticks
  scale_y_continuous(n.breaks=7) +
  scale_x_discrete(labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
ggsave("Average Duration by Month.png", plot = gg, device = "png")
```


8) The following code visualizes the dynamics of the number of rides for each day of the week during 2022.

```{r}
# Number of Rides by Day of the Week
data1 <- read.csv("MostPopularDay.csv")
data1$day <- factor(data1$day, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))

gg <- ggplot(data1, aes(x = day, group = 1)) +
  geom_line(aes(y = CasualTotal), color = "#fd7f6f", linetype = "solid", linewidth = 1) +
  geom_line(aes(y = MemberTotal), color = "#7eb0d5", linetype = "solid", linewidth = 1) +
  geom_text(aes(x = "Sunday", y = CasualTotal[7], label = "Casual Number"), vjust = 2, hjust = 2.8, color = "#fd7f6f") +
  geom_text(aes(x = "Sunday", y = MemberTotal[7], label = "Member Number"), vjust = -5, hjust = 2.6, color = "#7eb0d5") +
  ggtitle("Number of Rides by Day") +
  xlab("Day of the Week") +
  ylab("Number of Rides")+
  theme(axis.text.y = element_text(size = 8),  # Set the size of the y-axis text
        axis.ticks.y = element_line(linewidth = 0.1)) +  # Set the size of the y-axis ticks
  scale_y_continuous(n.breaks=7)
ggsave("Number of Rides by Day.png", plot = gg, device = "png")
```


9) The code chunk below visualizes the dynamics of ride duration change during the week for member and casual riders of the year 2022.

```{r}
# Average Duration by Day of the Week
gg <- ggplot(data1, aes(x = day, group = 1)) +
  geom_line(aes(y = AverageCasualDuration), color = "#fd7f6f", linetype = "solid", linewidth = 1) +
  geom_line(aes(y = AverageMemberDuration), color = "#7eb0d5", linetype = "solid", linewidth = 1) +
  geom_text(aes(x = "Sunday", y = AverageCasualDuration[7], label = "Casual Duration"), vjust = 2, hjust = 2.5, color = "#fd7f6f") +
  geom_text(aes(x = "Sunday", y = AverageMemberDuration[7], label = "Member Duration"), vjust = 1, hjust = 2.35, color = "#7eb0d5") +
  ggtitle("Average Duration by Day") +
  xlab("Day of the Week") +
  ylab("Average Duration (min)")+
  theme(axis.text.y = element_text(size = 8),  # Set the size of the y-axis text
        axis.ticks.y = element_line(linewidth = 0.1)) +  # Set the size of the y-axis ticks
  scale_y_continuous(n.breaks=7)
ggsave("Average Duration by Day.png", plot = gg, device = "png")
```


10) The following piece of code visualizes the dynamics of the total number of rides by hour during the day.

```{r}
# Number of Rides by Hour
data1 <- read.csv("MostPopularHour.csv")
data1$Hour <- factor(data1$Hour, levels = c("0","1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12","13","14","15",
                                              "16","17","18","19","20","21","22","23"))

gg <- ggplot(data1, aes(x = Hour, group = 1)) +
  geom_line(aes(y = CasualTotal), color = "#fd7f6f", linetype = "solid", linewidth = 1) +
  geom_line(aes(y = MemberTotal), color = "#7eb0d5", linetype = "solid", linewidth = 1) +
  geom_text(aes(x = "23", y = CasualTotal[7], label = "Casual Number"), vjust = 4, hjust = 3, color = "#fd7f6f") +
  geom_text(aes(x = "23", y = MemberTotal[7], label = "Member Number"), vjust = -1, hjust = 3.2, color = "#7eb0d5") +
  ggtitle("Number of Rides by Hour") +
  xlab("Hour") +
  ylab("Number of Rides")+
  theme(axis.text.y = element_text(size = 8),  # Set the size of the y-axis text
        axis.ticks.y = element_line(linewidth = 0.1)) +  # Set the size of the y-axis ticks
  scale_y_continuous(n.breaks=7)
ggsave("Number of Rides by Hour.png", plot = gg, device = "png")
```


11) The code below visualizes the dynamics during the day for the length of the ride for members and casual riders.

```{r}
# Average Duration by Hour
gg <- ggplot(data1, aes(x = Hour, group = 1)) +
  geom_line(aes(y = AverageCasualDuration), color = "#fd7f6f", linetype = "solid", linewidth = 1) +
  geom_line(aes(y = AverageMemberDuration), color = "#7eb0d5", linetype = "solid", linewidth = 1) +
  geom_text(aes(x = "23", y = AverageCasualDuration[7], label = "Casual Duration"), vjust = 2, hjust = 2, color = "#fd7f6f") +
  geom_text(aes(x = "23", y = AverageMemberDuration[7], label = "Member Duration"), vjust = -4, hjust = 2.35, color = "#7eb0d5") +
  ggtitle("Average Duration by Hour") +
  xlab("Hour") +
  ylab("Average Duration (min)")+
  theme(axis.text.y = element_text(size = 8),  # Set the size of the y-axis text
        axis.ticks.y = element_line(linewidth = 0.1)) +  # Set the size of the y-axis ticks
  scale_y_continuous(n.breaks=7)
ggsave("Average Duration by Hour.png", plot = gg, device = "png")
```

